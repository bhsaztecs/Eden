namespace KIPR {
class thread {};

thread thread_create(void (*func)());
void thread_start(thread &);
void thread_wait(thread &);
void thread_destroy(thread &);
void msleep(double);
void shut_down_in(int);
int accel_x();
int accel_y();
int accel_z();
int gyro_x();
int gyro_y();
int gyro_z();
int magneto_x();
int magneto_y();
int magneto_z();
float get_compass_angle();
int get_servo_position(int);
int get_servo_enabled(int);
int digital(int);
int analog(int);
float power_level();
int a_button();
int b_button();
int c_button();
int x_button();
int y_button();
int z_button();
int any_button();
int any_button_clicked();
int a_button_clicked();
int b_button_clicked();
int c_button_clicked();
int x_button_clicked();
int y_button_clicked();
int z_button_clicked();
void extra_buttons_show();
void extra_buttons_hide();
int get_extra_buttons_visible();
void cmpc(int);
int gmpc(int);
void motor(int, int);
void freeze(int);
void accel_calibrate();
void gyro_calibrate();
void magneto_calibrate();
void set_servo_position(int, int);
void ao();
void disable_servos();
void enable_servos();
void wait_for_light(int);
void console_clear();
} // namespace KIPR
