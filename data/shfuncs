#!/bin/sh
initialize() {
	echo "save before initialization? (y/n)"
	read save
	if [[ $save == "Y" || $save == "y" ]]; then
		git init
		git add .
		git commit -m "pre-initialize"
	elif [[ $save != "N" && $save != "n" ]]; then
		echo "Invalid input"
	fi
	sudo mkdir -p bin
	touch bin/botball_user_program
	sudo docker pull sillyfreak/wombat-cross
	touch src/main.cpp
	cat data/example.cpp > src/main.cpp
	echo "Run 'compile --nocopy executable' to validate."
}
indexe(){
	sudo mkdir -p develop
	sudo mkdir -p bin
	sudo cp -r bin src include develop/
	sudo docker run -it --rm --volume ./develop:/home/kipr:rw sillyfreak/wombat-cross \
		aarch64-linux-gnu-g++ -std=c++17 -g -Wall -I./include/* -L./bin/ ./src/main.cpp -leden -lm -lpthread -lkipr -lz -o ./bin/botball_user_program
	sudo cp ./develop/bin/botball_user_program bin/
	sudo rm -rf develop
}
executable() {
	sudo mkdir -p develop
	sudo mkdir -p bin
	sudo cp -r bin src include data LICENSE.txt project.manifest README.md develop/
	sudo docker run -it --rm --volume ./develop:/home/kipr:rw sillyfreak/wombat-cross \
		aarch64-linux-gnu-g++ -std=c++17 -g -Wall -I./include/* -I/usr/local/include/include/ -L/usr/local/lib ./src/*.cpp -lm -lpthread -lkipr -lz -o ./bin/botball_user_program
	sudo cp ./develop/bin/botball_user_program bin/
	sudo rm -rf develop
}
library() {
	sudo mkdir -p develop
	sudo mkdir -p bin
	sudo cp -r bin src include data LICENSE.txt project.manifest README.md develop/
	sudo docker run -it --rm --volume ./develop:/home/kipr:rw sillyfreak/wombat-cross \
		aarch64-linux-gnu-g++ -std=c++17 -g -fPIC -shared -Wall -I./include/* -I/usr/local/include/include/ -L/usr/local/lib ./src/*.cpp -lm -lpthread -lkipr -lz -o ./bin/libeden.so
	sudo cp ./develop/bin/libeden.so bin/
	sudo rm -rf develop
}
copy() {
	ping -c 1 192.168.125.1 > /dev/null || { echo "Host unreachable"; return 1; }
	if scp -r -q * "kipr@192.168.125.1:~/Documents/KISS/$1"; then
		return 0;
	else
	return 1;
	fi
}

shell() {
	ssh kipr@192.168.125.1
}

compile() {
	if [ -z "$1" ]; then
		echo "No destination specified.";
		return 1;
	fi
	echo "Compiling...";
	if "$2"; then
		if [[ "$1" != "--nocopy" ]]; then
			if copy "$1"; then
				echo -n "Succeeded at: "
			else
				echo -n "Copy failed at: "
			fi
		else
			echo -n "Compilation succeeded at: "
		fi
	else
		[ -d develop ] && rm -r develop
		echo -n "Compilation failed at: "
	fi
	date +"%r"
}
